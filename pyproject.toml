[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "alphaflow"
version = "0.0.1"
description = "AlphaFlow is a Python-based, event-driven backtesting framework designed for professional-grade trading research and strategy development."
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.10"
authors = [
    {name = "Brandon Schabell", email = "brandonschabell@gmail.com"}
]
classifiers = [
    'Development Status :: 3 - Alpha',
    'Environment :: Web Environment',
    'Intended Audience :: Developers',
    'Intended Audience :: Financial and Insurance Industry',
    'Intended Audience :: Science/Research',
    'License :: OSI Approved :: MIT License',
    'Operating System :: OS Independent',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Programming Language :: Python :: 3.12',
    'Programming Language :: Python :: 3.13',
    'Programming Language :: Python :: 3.14',
    'Topic :: Office/Business :: Financial',
    'Topic :: Scientific/Engineering :: Information Analysis',
    'Topic :: Software Development',
]
dependencies = [
    "pandas>=2.2.3",
    "requests>=2.32.3",
    "seaborn>=0.13.2",
]

[project.urls]
Homepage = "https://github.com/brandonschabell/alphaflow"
Repository = "https://github.com/brandonschabell/alphaflow"
Issues = "https://github.com/brandonschabell/alphaflow/issues"
Changelog = "https://github.com/brandonschabell/alphaflow/releases"

[tool.hatch.build.targets.wheel]
packages = [
  "alphaflow",
]

[tool.pytest.ini_options]
pythonpath = ["."]

[dependency-groups]
dev = [
    "mkdocs-material>=9.6.5",
    "pytest>=8.4.2",
    "ruff>=0.14.0",
]

[tool.ruff]
line-length = 120
target-version = "py310"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "N",   # pep8-naming
    "UP",  # pyupgrade
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "SIM", # flake8-simplify
    "PT",  # flake8-pytest-style
    "D",   # pydocstyle (docstring linting)
]
ignore = [
    "E501",  # line too long (handled by formatter)
    "D203",  # one-blank-line-before-class (conflicts with D211)
    "D213",  # multi-line-summary-second-line (conflicts with D212)
]
